{"version":3,"sources":["googleAuth.jsx","assets/googleIcon.png","containers/Login/Login.jsx","env.js","containers/Home/Home.jsx","components/Panel/Panel.jsx","containers/CourseView/CourseView.jsx","App.jsx","reportWebVitals.js","store/actions/auth.js","store/reducers/auth.js","index.js","containers/Home/Home.module.css","components/Panel/Panel.module.css","containers/Login/Login.module.css","containers/CourseView/CourseView.module.css"],"names":["GoogleAuthContext","React","createContext","GoogleAuthProvider","children","googleAuth","useGoogleLogin","clientId","scope","Provider","value","useGoogleAuth","useContext","Login","signIn","Fragment","className","styles","style","color","Button","onClick","GoogleImgContainer","GoogleImg","src","googleIcon","alt","Tag","variables","APIKEY","Home","props","useState","courses","setCourses","isLoading","setIsLoading","accessToken","googleUser","googleId","name","profileObj","givenName","anchorEl","open","signOut","refreshUser","useEffect","axios","get","headers","authorization","then","response","activeCourses","data","filter","course","ownerId","catch","err","toString","includes","history","NameContainer","marginLeft","Total","Divider","length","Ellipse","event","currentTarget","size","Menu","id","keepMounted","Boolean","onClose","MenuItem","fontFamily","GridList","cellHeight","cols","Tiles","padding","spacing","overflow","map","GridListTile","Tile","push","TileTop","Date","dateformat","creationTime","TileBottom","ViewAttendance","marginRight","height","display","flexDirection","justifyContent","type","width","marginTop","Panel","count","Top","Title","title","students","Bottom","loading","List","student","ListItem","Math","random","alignItems","noAssignments","textAlign","CourseView","courseId","window","location","pathname","split","nonActiveStudents","setNonActiveStudents","activeStudents","setActiveStudents","courseName","setCourseName","setLoading","hasError","setHasError","setNoAssignments","moment","format","date","setDate","roster","setRoster","sameDay","d1","d2","remove_duplicates","arr","obj","ret_arr","i","key","getData","useCallback","a","assignmentsToday","result","courseWork","forEach","item","createdAt","hours","dueTime","dueDate","year","month","day","minutes","Promise","all","assignment","studentSubmissions","submission","userId","activeStudentNames","nonActiveStudentNames","AS","profile","familyName","console","log","TopContainer","GoBack","goBack","Placeholder","utils","DateFnsUtils","disableToolbar","variant","margin","disableFuture","onChange","KeyboardButtonProps","BottomContainer","sort","App","routes","isSignedIn","setTimeout","exact","path","component","to","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","LOGIN","initialState","authenticated","authReducer","state","action","token","rootReducer","combineReducers","auth","store","createStore","applyMiddleware","thunk","ReactDOM","render","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.aef2d399.chunk.js","sourcesContent":["import React from 'react'\r\nimport { useGoogleLogin } from 'react-use-googlelogin'\r\n\r\nconst GoogleAuthContext = React.createContext()\r\n\r\nexport const GoogleAuthProvider = ({ children }) => {\r\n    const googleAuth = useGoogleLogin({\r\n        clientId: \"778190995266-knmp3uuhepkci2icmtfasoevob43827f.apps.googleusercontent.com\",\r\n        scope: \"https://www.googleapis.com/auth/classroom.courses https://www.googleapis.com/auth/classroom.coursework.students https://www.googleapis.com/auth/classroom.rosters.readonly\"\r\n    })\r\n\r\n    return (\r\n        <GoogleAuthContext.Provider value={googleAuth}>\r\n            {children}\r\n        </GoogleAuthContext.Provider>\r\n    )\r\n}\r\n\r\nexport const useGoogleAuth = () => React.useContext(GoogleAuthContext)","export default __webpack_public_path__ + \"static/media/googleIcon.ccedd067.png\";","import React from 'react';\r\nimport { useGoogleAuth } from '../../googleAuth';\r\nimport googleIcon from '../../assets/googleIcon.png';\r\n\r\n// STYLES\r\nimport styles from './Login.module.css'\r\n\r\nconst Login = () => {\r\n    const { signIn } = useGoogleAuth();\r\n\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <div className={styles.Login}>\r\n                <h3>Let's get started</h3>\r\n                <span style={{ color: 'gray' }}>Log in to view attendance records for your Google Classroom</span>\r\n                <div className={styles.Button} onClick={signIn} >\r\n                    <div className={styles.GoogleImgContainer} >\r\n                        <img className={styles.GoogleImg} src={googleIcon} alt=\"googleLogo\" />\r\n                    </div>\r\n                    <span>Login with Google</span>\r\n                </div>\r\n            </div>\r\n            <span className={styles.Tag}>Built by Ryan Castriotta</span>\r\n        </React.Fragment>\r\n\r\n    )\r\n}\r\n\r\nexport default Login;","const variables = {\r\n    APIKEY: 'AIzaSyCMjGr5TUHvrvREISD6DxzhOlo6ysPk5HQ'\r\n}\r\n\r\nexport default variables;","import React, { useEffect, useState } from 'react';\r\nimport { useGoogleAuth } from '../../googleAuth';\r\nimport variables from '../../env';\r\n// EXTERNAL\r\nimport axios from 'axios'\r\nimport { GridList, GridListTile, Menu, MenuItem } from '@material-ui/core';\r\nimport dateformat from 'dateformat';\r\nimport { MdArrowForward } from 'react-icons/md';\r\nimport { FiMoreVertical } from 'react-icons/fi';\r\nimport Loader from 'react-loader-spinner'\r\n\r\n// STYLES\r\nimport styles from './Home.module.css';\r\n\r\nconst Home = (props) => {\r\n    const [courses, setCourses] = useState([])\r\n    const [isLoading, setIsLoading] = useState(false)\r\n    const accessToken = useGoogleAuth().googleUser.accessToken\r\n    const googleId = useGoogleAuth().googleUser.googleId\r\n    const name = useGoogleAuth().googleUser.profileObj.givenName\r\n    const [anchorEl, open] = React.useState(null);\r\n    const { signOut } = useGoogleAuth();\r\n    const { refreshUser } = useGoogleAuth()\r\n\r\n\r\n    useEffect(() => {\r\n        setIsLoading(true)\r\n        axios.get(`https://content-classroom.googleapis.com/v1/courses?courseStates=ACTIVE&key=${variables.APIKEY}`, {\r\n            headers: {\r\n                authorization: 'Bearer ' + accessToken\r\n            }\r\n        })\r\n            .then((response) => {\r\n                setIsLoading(false)\r\n                const courses = response.data.courses\r\n                const activeCourses = courses.filter(course => course.ownerId === googleId)\r\n                setCourses(activeCourses)\r\n            })\r\n            .catch((err) => {\r\n                if (err.toString().includes('401')) {\r\n                    refreshUser()\r\n                }\r\n                setIsLoading(false)\r\n            })\r\n    }, [accessToken, googleId, props.history, refreshUser])\r\n\r\n    const handleClick = event => {\r\n        open(event.currentTarget);\r\n    };\r\n\r\n    const handleClose = () => {\r\n        open(null);\r\n    };\r\n\r\n\r\n\r\n    return (\r\n        <div className={styles.Home}>\r\n            <div className={styles.NameContainer}>\r\n                <div style={{ marginLeft: '50px' }}>\r\n                    <h2>Hello, {name}</h2>\r\n                    <div className={styles.Total}>\r\n                        <p>ACTIVE CLASSES</p>\r\n                        <div className={styles.Divider} />\r\n                        <h4 style={{ color: 'rgba(94, 129, 244, 1)' }}>{courses.length} total</h4>\r\n                    </div>\r\n\r\n                </div>\r\n                <div className={styles.Ellipse} onClick={handleClick}>\r\n                    <FiMoreVertical color={\"rgba(94, 129, 244, 1)\"} size={30} style={{}} />\r\n                </div>\r\n                <Menu\r\n                    id=\"simple-menu\"\r\n                    anchorEl={anchorEl}\r\n                    keepMounted\r\n                    open={Boolean(anchorEl)}\r\n\r\n                    onClose={handleClose}\r\n\r\n                >\r\n                    <MenuItem onClick={signOut} style={{ color: 'rgba(94, 129, 244, 1)', fontFamily: 'averta-bold' }}>Logout</MenuItem>\r\n                </Menu>\r\n\r\n\r\n            </div>\r\n            {!isLoading && <GridList cellHeight={160} cols={4} className={styles.Tiles} padding={20} spacing={0} style={{ overflow: 'visible' }} >\r\n                {courses.map((course) => {\r\n                    return (\r\n                        <GridListTile key={course.id} cols={1} className={styles.Tile} onClick={() => props.history.push(`/courses/${course.id}`)}>\r\n                            <div className={styles.TileTop}>\r\n                                <h3>{course.name}</h3>\r\n                                <div className={styles.Date}>\r\n                                    <p style={{ color: 'gray' }}>Created</p>\r\n                                    <div className={styles.Divider} />\r\n                                    <p style={{ color: 'rgba(94, 129, 244, 1)' }}>{dateformat(course.creationTime)}</p>\r\n                                </div>\r\n\r\n                            </div>\r\n                            <div className={styles.TileBottom}>\r\n                                <div className={styles.ViewAttendance}>\r\n                                    <span>View attendance</span>\r\n                                    <MdArrowForward color={\"rgba(94, 129, 244, 1)\"} size={25} style={{ marginLeft: \"10px\", marginRight: \"20px\" }} />\r\n                                </div>\r\n                            </div>\r\n                        </GridListTile>\r\n                    )\r\n                })}\r\n                <div style={{ height: '50px' }} />\r\n\r\n            </GridList>}\r\n            {\r\n                isLoading && <div style={{ display: 'flex', flexDirection: 'row', justifyContent: 'center' }}>\r\n                    <Loader\r\n                        type=\"TailSpin\"\r\n                        color={'rgba(94, 129, 244, 1)'}\r\n                        height={\"100px\"}\r\n                        width={\"100px\"}\r\n                        style={{ marginTop: '200px' }}\r\n                    />\r\n                </div>\r\n            }\r\n        </div >\r\n\r\n\r\n    )\r\n}\r\n\r\nexport default Home;","import React from 'react';\r\n\r\n// STYLES\r\nimport styles from './Panel.module.css';\r\n\r\n// EXTERNAL\r\nimport { MdPrint } from 'react-icons/md';\r\nimport Loader from 'react-loader-spinner'\r\n\r\nconst Panel = (props) => {\r\n    let count = 0;\r\n    return (\r\n        <div className={styles.Panel}>\r\n            <div className={styles.Top}>\r\n                <div className={styles.Title}>\r\n                    <h3>{props.title}</h3>\r\n                    <MdPrint color={\"rgba(94, 129, 244, 1)\"} size={25} />\r\n                </div>\r\n                <span style={{ color: 'gray' }}>{props.students.length} total</span>\r\n            </div>\r\n\r\n            <div className={styles.Bottom}>\r\n                {!props.loading && <div className={styles.List}>\r\n                    {props.students.map(student => {\r\n                        count++\r\n                        return (\r\n                            <div key={Math.random()} className={styles.ListItem}>\r\n                                <span style={{ fontFamily: 'averta-bold' }}>{student}</span>\r\n                                <span style={{ color: 'rgba(94, 129, 244, 1)' }}>{count}</span>\r\n                            </div>\r\n                        )\r\n                    })}\r\n                </div>}\r\n                {props.loading &&\r\n                    <div style={{ display: 'flex', flexDirection: 'column', alignItems: 'center' }}>\r\n                        <Loader\r\n                            type=\"TailSpin\"\r\n                            color={'rgba(94, 129, 244, 1)'}\r\n                            height={\"100px\"}\r\n                            width={\"100px\"}\r\n                            style={{\r\n                                marginTop: '50px'\r\n                            }}\r\n                        />\r\n                    </div>}\r\n                {props.noAssignments && <div style={{ display: 'flex', flexDirection: 'row', justifyContent: 'center', marginTop: '70px', marginLeft: '50px', marginRight: '50px', textAlign: 'center' }}>\r\n                    <span>You've posted no attendance related assignments for this class today.</span>\r\n                </div>}\r\n            </div>\r\n\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Panel;","import React, { useCallback, useEffect, useState } from 'react';\r\nimport { useGoogleAuth } from '../../googleAuth';\r\nimport variables from '../../env';\r\n\r\n// EXTERNAL\r\nimport axios from 'axios';\r\nimport { MdArrowBack } from 'react-icons/md';\r\nimport DateFnsUtils from '@date-io/date-fns';\r\nimport {\r\n    MuiPickersUtilsProvider,\r\n    KeyboardDatePicker\r\n} from '@material-ui/pickers';\r\nimport moment from 'moment';\r\n\r\n// STYLES\r\nimport styles from './CourseView.module.css';\r\n\r\n// COMPONENTS\r\nimport Panel from '../../components/Panel/Panel';\r\n\r\nconst CourseView = (props) => {\r\n    const courseId = window.location.pathname.split('courses/')[1]\r\n    const accessToken = useGoogleAuth().googleUser.accessToken\r\n    const [nonActiveStudents, setNonActiveStudents] = useState([])\r\n    const [activeStudents, setActiveStudents] = useState([])\r\n    const [courseName, setCourseName] = useState('...Loading')\r\n    const [loading, setLoading] = useState(true)\r\n    const [hasError, setHasError] = useState(false)\r\n    const [noAssignments, setNoAssignments] = useState(false)\r\n    const [date, setDate] = useState(moment(new Date()).format('MM/DD/YYYY'))\r\n    const [roster, setRoster] = useState([])\r\n    const { refreshUser } = useGoogleAuth()\r\n\r\n    const sameDay = (d1, d2) => {\r\n        return moment(d1).format('MM/DD/YYYY') === moment(d2).format('MM/DD/YYYY')\r\n    }\r\n\r\n    const remove_duplicates = (arr) => {\r\n        var obj = {};\r\n        var ret_arr = [];\r\n        for (var i = 0; i < arr.length; i++) {\r\n            obj[arr[i]] = true;\r\n        }\r\n        for (var key in obj) {\r\n            ret_arr.push(key);\r\n        }\r\n        return ret_arr;\r\n    }\r\n\r\n    const getData = useCallback((date) => {\r\n        (async () => {\r\n            try {\r\n                setLoading(true)\r\n                setNoAssignments(false)\r\n                setHasError(false)\r\n\r\n                let activeStudents = [];\r\n                let assignmentsToday = [];\r\n\r\n                await axios.get(`https://classroom.googleapis.com/v1/courses/${courseId}/courseWork?courseWorkStates=PUBLISHED&key=${variables.APIKEY}`, {\r\n                    headers: {\r\n                        authorization: 'Bearer ' + accessToken\r\n                    }\r\n                }).then((result) => {\r\n\r\n                    // get any assignments that were created on the day and that also have a due date on the day\r\n                    result.data.courseWork.forEach((item) => {\r\n                        if (\"dueDate\" in item && \"dueTime\" in item && sameDay(new Date(item.creationTime), date)) {\r\n                            const createdAt = new Date(item.creationTime)\r\n\r\n                            let hours = item.dueTime.hours\r\n                            if (hours.toString().length === 1) {\r\n                                hours = `0${hours}`\r\n                            }\r\n                            const dueDate = new Date(`${item.dueDate.year}-${item.dueDate.month}-${item.dueDate.day}T${hours}:${item.dueTime.minutes}:00.000Z`)\r\n\r\n                            if (sameDay(createdAt, dueDate)) {\r\n                                assignmentsToday.push(item)\r\n                            }\r\n                        }\r\n                    })\r\n                })\r\n\r\n                if (assignmentsToday.length === 0) {\r\n                    setNoAssignments(true)\r\n                    setLoading(false)\r\n                    setActiveStudents([])\r\n                    setNonActiveStudents([])\r\n                    return;\r\n                }\r\n\r\n                // gets all active students from today\r\n                await Promise.all(assignmentsToday.map(async (assignment) => {\r\n                    // get submissions for each assignment \r\n                    await axios.get(`https://classroom.googleapis.com/v1/courses/${courseId}/courseWork/${assignment.id}/studentSubmissions?key=${variables.APIKEY}`, {\r\n                        headers: {\r\n                            authorization: 'Bearer ' + accessToken\r\n                        }\r\n                    }).then((result) => {\r\n                        const students = [];\r\n\r\n                        result.data.studentSubmissions.forEach((submission) => {\r\n                            if (\"late\" in submission) {\r\n                                return\r\n                            }\r\n                            students.push(submission.userId)\r\n                        })\r\n                        activeStudents.push(...students)\r\n                    })\r\n                }))\r\n\r\n                // remove duplicates\r\n                activeStudents = remove_duplicates(activeStudents)\r\n\r\n                const activeStudentNames = [];\r\n                const nonActiveStudentNames = [];\r\n\r\n                // loop through class roster and determine whether student is in active students list\r\n                if (assignmentsToday.length > 0) {\r\n                    roster.forEach((student) => {\r\n                        if (activeStudents.filter(AS => AS === student.profile.id).length > 0) {\r\n                            activeStudentNames.push(`${student.profile.name.familyName}, ${student.profile.name.givenName}`)\r\n                        } else {\r\n                            nonActiveStudentNames.push(`${student.profile.name.familyName}, ${student.profile.name.givenName}`)\r\n                        }\r\n                    })\r\n                }\r\n\r\n                setActiveStudents(activeStudentNames)\r\n                setNonActiveStudents(nonActiveStudentNames)\r\n                setLoading(false)\r\n\r\n            } catch (err) {\r\n                if (err.toString().includes('401')) {\r\n                    refreshUser()\r\n                }\r\n                console.log(err)\r\n                setLoading(false)\r\n                setHasError(true)\r\n            }\r\n        })();\r\n    }, [courseId, accessToken, refreshUser, roster])\r\n\r\n    useEffect(() => {\r\n        if (roster.length > 0 || courseName !== '...Loading') {\r\n            return;\r\n        }\r\n        axios.get(`https://classroom.googleapis.com/v1/courses/${courseId}?key=${variables.APIKEY}`, {\r\n            headers: {\r\n                authorization: 'Bearer ' + accessToken\r\n            }\r\n        }).then((result) => {\r\n            setCourseName(result.data.name)\r\n        })\r\n\r\n        axios.get(`https://classroom.googleapis.com/v1/courses/${courseId}/students?key=${variables.APIKEY}`, {\r\n            headers: {\r\n                authorization: 'Bearer ' + accessToken\r\n            }\r\n        }).then((result) => {\r\n            setRoster(result.data.students)\r\n            getData(new Date())\r\n        })\r\n    }, [accessToken, courseId, getData, courseName, roster.length])\r\n\r\n\r\n\r\n    return (\r\n        <div className={styles.CourseView}>\r\n            <div className={styles.TopContainer}>\r\n                <div className={styles.GoBack} onClick={() => props.history.goBack()}>\r\n                    <MdArrowBack color={\"rgba(94, 129, 244, 1)\"} size={30} style={{ marginRight: '10px' }} />\r\n                    <span>Go back</span>\r\n                </div>\r\n\r\n                <h2>{hasError ? 'Error loading content' : courseName}</h2>\r\n\r\n                <div className={styles.Placeholder}>\r\n                    <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n                        <KeyboardDatePicker\r\n                            disableToolbar\r\n                            variant=\"inline\"\r\n                            format=\"MM/dd/yyyy\"\r\n                            margin=\"normal\"\r\n                            id=\"date-picker-inline\"\r\n                            value={date}\r\n                            disableFuture\r\n                            onChange={value => {\r\n                                if (!loading) {\r\n                                    setDate(moment(value).format('MM/DD/YYYY'))\r\n                                    getData(new Date(value))\r\n                                }\r\n                            }}\r\n                            KeyboardButtonProps={{\r\n                                'aria-label': 'change date',\r\n                            }}\r\n                        />\r\n                    </MuiPickersUtilsProvider>\r\n                </div>\r\n            </div>\r\n\r\n            <div className={styles.BottomContainer}>\r\n                <Panel noAssignments={noAssignments} loading={loading} students={activeStudents.sort()} title={\"Active students today\"} />\r\n                <Panel noAssignments={noAssignments} loading={loading} students={nonActiveStudents.sort()} title={\"Non-active students today\"} />\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CourseView;","import React, { useEffect, useState } from 'react';\n\n// ROUTER\nimport { Switch, Route, Redirect } from 'react-router-dom';\n\n// CONTAINERS\nimport Login from './containers/Login/Login';\nimport Home from './containers/Home/Home';\nimport CourseView from './containers/CourseView/CourseView';\n\nimport { useGoogleAuth } from './googleAuth';\n\n\n\nfunction App() {\n  const { isSignedIn } = useGoogleAuth();\n  const [loading, setLoading] = useState(true)\n  let routes;\n\n  // prevents flashing of login screen\n  useEffect(() => {\n    setTimeout(() => {\n      setLoading(false)\n    }, 1000)\n  }, [])\n\n\n  if (isSignedIn) {\n    routes = (\n      <Switch>\n        <Route exact path=\"/\" component={Home} />\n        <Route path=\"/courses/:id\" component={CourseView} />\n        <Redirect to=\"/\" />\n      </Switch>\n    )\n  } else if (isSignedIn === false) {\n    routes = (\n      <Switch>\n        <Route exact path=\"/login\" component={Login} />\n        <Redirect to=\"/login\" />\n      </Switch>\n    )\n  }\n\n  return (\n    <React.Fragment>\n      {loading ? <div>...Loading</div> : routes}\n    </React.Fragment>\n\n  );\n}\n\nexport default App;\n\n\n\n\n\n\n\n\n\n\n\n\n\n/*\n   axios.get('https://classroom.googleapis.com/v1/courses/62179143513/courseWork?key=AIzaSyCMjGr5TUHvrvREISD6DxzhOlo6ysPk5HQ', {\n      headers: {\n        authorization: 'Bearer ' + accessToken\n      }\n    }).then((response) => {\n      console.log(response)\n    })\n    */\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n/*\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nconst App = () => {\n  const [authenticated, setAuthenticated] = useState(null)\n  const [accessToken, setAccessToken] = useState(null)\n  let routes;\n\n  function updateSigninStatus(isSignedIn) {\n    setAuthenticated(isSignedIn)\n  }\n\n  useEffect(() => {\n    setTimeout(() => {\n      window.gapi.load('client:auth2', () => {\n        window.gapi.client.init({\n          apiKey: window.API_KEY,\n          clientId: window.CLIENT_ID,\n          discoveryDocs: window.DISCOVERY_DOCS,\n          scope: window.SCOPES\n        }).then(() => {\n          setAccessToken(window.gapi.auth2.getAuthInstance().currentUser.le.wc.access_token)\n          window.gapi.auth2.getAuthInstance().isSignedIn.listen(updateSigninStatus);\n\n          // Handle the initial sign-in state\n          updateSigninStatus(window.gapi.auth2.getAuthInstance().isSignedIn.get());\n        });\n      });\n    }, 100)\n  }, [])\n\n  if (authenticated) {\n    console.log(accessToken)\n    window.gapi.client.classroom.courses.list({\n      pageSize: 10\n    }).then(function (response) {\n      var courses = response.result.courses;\n      console.log(courses)\n    })\n    axios.get('https://content-classroom.googleapis.com/v1/courses/154456770617?key=AIzaSyCMjGr5TUHvrvREISD6DxzhOlo6ysPk5HQ', {\n      headers: {\n        authorization: 'Bearer ' + accessToken\n      }\n    }).then((response) => {\n      console.log(response)\n    })\n  }\n  if (authenticated) {\n    routes = (\n      <button onClick={() => window.handleSignoutClick()}>Signout</button>\n\n    )\n  } else if (authenticated === false) {\n    routes = (\n      <button onClick={() => window.handleAuthClick()}>Signin</button>\n    )\n  }\n\n\n  return (\n    <React.Fragment>\n      {routes}\n    </React.Fragment>\n  )\n}\n\nexport default App;\n*/","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","// TYPES\r\nexport const LOGIN = 'LOGIN'\r\n\r\nexport const login = (token, name) => {\r\n    return (dispatch) => {\r\n        dispatch({ type: LOGIN, token, name })\r\n    }\r\n}","// import actions\r\nimport { LOGIN } from '../actions/auth';\r\n\r\nconst initialState = {\r\n    accessToken: null,\r\n    authenticated: null,\r\n    name: null\r\n}\r\n\r\nconst authReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case LOGIN:\r\n            return {...state, accessToken: action.token, name: action.name, authenticated: true }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport default authReducer;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\n// ROUTER\nimport { BrowserRouter } from 'react-router-dom';\n\n// REDUX\nimport { Provider } from 'react-redux';\nimport { createStore, applyMiddleware, combineReducers } from 'redux';\nimport authReducer from './store/reducers/auth';\nimport thunk from 'redux-thunk';\n\nimport { GoogleAuthProvider } from './googleAuth';\n\n\nconst rootReducer = combineReducers({\n  auth: authReducer,\n});\n\nconst store = createStore(rootReducer, applyMiddleware(thunk))\n\n\nReactDOM.render(\n  <Provider store={store}>\n    <GoogleAuthProvider>\n      <BrowserRouter>\n        <App />\n      </BrowserRouter>\n    </GoogleAuthProvider>\n  </Provider>\n  ,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Home\":\"Home_Home__1D5pe\",\"Tiles\":\"Home_Tiles__1ouXY\",\"Tile\":\"Home_Tile__2JqNK\",\"NameContainer\":\"Home_NameContainer__1h_9e\",\"Total\":\"Home_Total__1IKOY\",\"Divider\":\"Home_Divider__2zdF9\",\"TileTop\":\"Home_TileTop__3coDW\",\"Date\":\"Home_Date__1zAHA\",\"TileBottom\":\"Home_TileBottom__ES2C5\",\"ViewAttendance\":\"Home_ViewAttendance__3goWm\",\"Ellipse\":\"Home_Ellipse__2QbvV\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Panel\":\"Panel_Panel__3pOb2\",\"Title\":\"Panel_Title__3c67K\",\"Top\":\"Panel_Top__3pWdv\",\"List\":\"Panel_List__2dS6k\",\"ListItem\":\"Panel_ListItem__3IiSi\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Login\":\"Login_Login__3VIih\",\"Button\":\"Login_Button__1C_rF\",\"GoogleImgContainer\":\"Login_GoogleImgContainer__2_44v\",\"GoogleImg\":\"Login_GoogleImg__1nc5O\",\"Tag\":\"Login_Tag__1UqGT\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"TopContainer\":\"CourseView_TopContainer__Ihnlz\",\"GoBack\":\"CourseView_GoBack__1JBDk\",\"Placeholder\":\"CourseView_Placeholder__KRyZU\",\"CourseView\":\"CourseView_CourseView__QW3Nl\",\"BottomContainer\":\"CourseView_BottomContainer__3d3Cr\"};"],"sourceRoot":""}